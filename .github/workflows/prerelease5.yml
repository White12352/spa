name: Build SFA

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TAGS: with_quic,with_grpc,with_wireguard,with_gvisor,with_shadowsocksr,with_utls,with_clash_api,with_proxyprovider

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get latest go version
        id: go_version
        run: |
          echo go_version=$(curl -s https://raw.githubusercontent.com/actions/go-versions/main/versions-manifest.json | grep -oE '"version": "[0-9]{1}.[0-9]{1,}(.[0-9]{1,})?"' | head -1 | cut -d':' -f2 | sed 's/ //g; s/"//g') >> $GITHUB_OUTPUT

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ steps.version.outputs.go_version }}

      - name: Checkout Source Code
        run: |
          git clone -b dev-next-yaott https://github.com/CHIZI-0618/sing-box code
          cd code
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
          git revert b728ba5
          cd ..
          mv ${{ github.workspace }}/code/* ${{ github.workspace }} && rm -rf ${{ github.workspace }}/code
          git clone -b build https://github.com/yaotthaha/sing-box-for-android SFA

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'oracle'
          java-version: 20

      - name: Build SFA
        env:
          KEYSTORE_PATH: "${{ github.workspace }}/.github/k.jks"
          KEYSTORE_PASS: ${{ secrets.KEYSTORE_PASS }}
          ALIAS_NAME: ${{ secrets.ALIAS_NAME }}
          ALIAS_PASS: ${{ secrets.ALIAS_PASS }}
        run: |
          mkdir -p SFA/app/libs/
          make lib_install
          version=$(CGO_ENABLED=0 go run ./cmd/internal/read_tag)
          CGO_ENABLED=1 gomobile bind -v -androidapi 21 -javapkg=io.nekohasekai -libname=box -tags ${TAGS} -ldflags "-X github.com/sagernet/sing-box/constant.Version=${version} -buildid=" ./experimental/libbox
          cp ./libbox.aar SFA/app/libs/
          cd SFA
          echo "VERSION_NAME=${version}" > local.properties
          echo "VERSION_CODE=$(date +%Y%m%d%H)" >> local.properties
          sed -i '23s|.*|        versionCode getProps("VERSION_CODE").toInteger()|' ${{ github.workspace }}/SFA/app/build.gradle
          sed -i '24s|.*|        versionName getProps("VERSION_NAME")|' ${{ github.workspace }}/SFA/app/build.gradle
          sed -i '30s|.*|            storeFile file(System.getenv("KEYSTORE_PATH"))|' ${{ github.workspace }}/SFA/app/build.gradle
          #chmod +x ./gradlew
          #dos2unix ./gradlew
          chmod 0755 ./gradlew
          ./gradlew assembleRelease

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: SFA
          path: ${{ github.workspace }}/SFA/app/build/outputs/apk/
